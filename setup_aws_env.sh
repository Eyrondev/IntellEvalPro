#!/bin/bash
# AWS EC2 Deployment Script - Setup Environment Variables
# Run this script after deploying to EC2 to set up secrets

echo "========================================================================"
echo "IntellEvalPro - AWS Environment Setup"
echo "========================================================================"
echo ""

# Check if running as root
if [ "$EUID" -eq 0 ]; then 
    echo "⚠️  Please do not run as root"
    exit 1
fi

# Project directory
PROJECT_DIR="/home/ubuntu/IntellEvalPro"

echo "📁 Project Directory: $PROJECT_DIR"
echo ""

# Function to prompt for secret
prompt_secret() {
    local var_name=$1
    local prompt_text=$2
    local current_value=$(grep "^$var_name=" $PROJECT_DIR/.env 2>/dev/null | cut -d'=' -f2-)
    
    if [ -n "$current_value" ]; then
        echo "Current value: ${current_value:0:10}..."
        read -p "$prompt_text [Enter to keep current]: " value
        if [ -z "$value" ]; then
            echo "$current_value"
        else
            echo "$value"
        fi
    else
        read -p "$prompt_text: " value
        echo "$value"
    fi
}

echo "🔐 Let's set up your environment variables"
echo "   Press Enter to keep current values"
echo ""

# Collect secrets
SECRET_KEY=$(prompt_secret "SECRET_KEY" "Enter SECRET_KEY (random string for sessions)")
DATABASE_URL=$(prompt_secret "DATABASE_URL" "Enter DATABASE_URL (mysql+pymysql://user:pass@host/db)")
GEMINI_API_KEY=$(prompt_secret "GEMINI_API_KEY" "Enter GEMINI_API_KEY")
MAIL_SERVER=$(prompt_secret "MAIL_SERVER" "Enter MAIL_SERVER (default: smtp.gmail.com)")
MAIL_PORT=$(prompt_secret "MAIL_PORT" "Enter MAIL_PORT (default: 587)")
MAIL_USERNAME=$(prompt_secret "MAIL_USERNAME" "Enter MAIL_USERNAME")
MAIL_PASSWORD=$(prompt_secret "MAIL_PASSWORD" "Enter MAIL_PASSWORD (Gmail App Password)")

# Set defaults
MAIL_SERVER=${MAIL_SERVER:-smtp.gmail.com}
MAIL_PORT=${MAIL_PORT:-587}

echo ""
echo "📝 Creating .env file..."

# Create .env file
cat > $PROJECT_DIR/.env << EOF
# IntellEvalPro Production Environment Configuration
# Generated by setup script

# Flask Configuration
SECRET_KEY=$SECRET_KEY
DEBUG=False

# Database Configuration
DATABASE_URL=$DATABASE_URL

# Google Gemini AI
GEMINI_API_KEY=$GEMINI_API_KEY

# Email Configuration
MAIL_SERVER=$MAIL_SERVER
MAIL_PORT=$MAIL_PORT
MAIL_USE_TLS=True
MAIL_USERNAME=$MAIL_USERNAME
MAIL_PASSWORD=$MAIL_PASSWORD
EOF

# Set secure permissions
chmod 600 $PROJECT_DIR/.env

echo "✅ .env file created with secure permissions (600)"
echo ""

# Also export to current session
export SECRET_KEY="$SECRET_KEY"
export DATABASE_URL="$DATABASE_URL"
export GEMINI_API_KEY="$GEMINI_API_KEY"
export MAIL_SERVER="$MAIL_SERVER"
export MAIL_PORT="$MAIL_PORT"
export MAIL_USE_TLS="True"
export MAIL_USERNAME="$MAIL_USERNAME"
export MAIL_PASSWORD="$MAIL_PASSWORD"
export DEBUG="False"

echo "✅ Environment variables exported to current session"
echo ""

# Add to ~/.bashrc for persistence
echo "📝 Adding to ~/.bashrc for persistence..."

# Remove old IntellEvalPro section if exists
sed -i '/# IntellEvalPro Environment Variables/,/# End IntellEvalPro/d' ~/.bashrc

# Add new section
cat >> ~/.bashrc << 'EOF'

# IntellEvalPro Environment Variables
export SECRET_KEY="$SECRET_KEY"
export DATABASE_URL="$DATABASE_URL"
export GEMINI_API_KEY="$GEMINI_API_KEY"
export MAIL_SERVER="$MAIL_SERVER"
export MAIL_PORT="$MAIL_PORT"
export MAIL_USE_TLS="True"
export MAIL_USERNAME="$MAIL_USERNAME"
export MAIL_PASSWORD="$MAIL_PASSWORD"
export DEBUG="False"
# End IntellEvalPro
EOF

echo "✅ Added to ~/.bashrc"
echo ""

# Check if systemd service exists
if [ -f "/etc/systemd/system/intellevalpro.service" ]; then
    echo "🔄 Restarting systemd service..."
    sudo systemctl restart intellevalpro
    echo "✅ Service restarted"
else
    echo "ℹ️  No systemd service found. You can start manually with:"
    echo "   cd $PROJECT_DIR && python app.py"
fi

echo ""
echo "========================================================================"
echo "✅ Setup Complete!"
echo "========================================================================"
echo ""
echo "🧪 Test your configuration:"
echo "   python $PROJECT_DIR/check_secrets.py"
echo ""
echo "🚀 Start your application:"
echo "   cd $PROJECT_DIR && python app.py"
echo ""
echo "========================================================================"
